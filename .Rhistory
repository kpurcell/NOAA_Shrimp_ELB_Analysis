+ s(do) + s(depth) + s(ppnd) + s(jd) + s(cent_lon,cent_lat),
data=gam.2mo.avg.dur.la)
summary(m.2mo.avg.dur.la)
gam.2mo.avg.dur.tx<-gam.2mo.avg.dur.tx[,c("yr","jd","hrs","do","depth", "ppnd", "la_fuel_price","avg.dur","cent_lon","cent_lat")]
gam.2mo.avg.dur.tx<-na.omit(gam.2mo.avg.dur.tx)
m.2mo.avg.dur.tx<-gam(avg.dur ~ factor(yr) + la_fuel_price  + hrs
+ s(depth) + s(ppnd) + s(jd) + s(cent_lon,cent_lat) +
s(cent_lon,cent_lat, by=do),
data=gam.2mo.avg.dur.tx)
nspm.2mo.avg.dur.tx<-gam(avg.dur ~ factor(yr) + la_fuel_price  + hrs
+ s(do) + s(depth) + s(ppnd) + s(jd) + s(cent_lon,cent_lat),
data=gam.2mo.avg.dur.tx)
summary(m.2mo.avg.dur.tx)
par(mfrow=c(4,2))
#DO
plot(nspm.2mo.dur.la, select=1, shade=T, all.terms=T, scale=0,
xlab="Dissolved Oxygen (mg l ^-1)",
ylab="Effect of Dissolved Oxygen")
text(3, -2, "A", cex=1.5,font=2)
plot(nspm.2mo.dur.tx, select=1, shade=T, all.terms=T, scale=0,
xlab="Dissolved Oxygen (mg l^-1",
ylab="")
text(3, -2, "B", cex=1.5,font=2)
#Depth
plot(nspm.2mo.dur.la, select=2, shade=T, all.terms=T, scale=0,
xlab="Depth (m)",
ylab="Effect of Depth")
text(3, -2, "C", cex=1.5,font=2)
plot(nspm.2mo.dur.tx, select=2, shade=T, all.terms=T, scale=0,
xlab="Depth (m)",
ylab="")
text(3, -2, "D", cex=1.5,font=2)
#Price
plot(nspm.2mo.dur.la, select=3, shade=T, all.terms=T, scale=0,
xlab="Price per pound (USD)",
ylab="Effect of Price")
text(0.4, -0.6, "E", cex=1.5,font=2)
plot(nspm.2mo.dur.tx, select=3, shade=T, all.terms=T, scale=0,
xlab="Price per pound (USD)",
ylab="")
text(0.4, -0.6, "F", cex=1.5,font=2)
#Day of Year
plot(nspm.2mo.dur.la, select=4, shade=T, all.terms=T, scale=0,
xlab="Julian Day",
ylab="Effect of Julian Day")
text(0.4, -0.6, "G", cex=1.5,font=2)
plot(nspm.2mo.dur.tx, select=4, shade=T, all.terms=T, scale=0,
xlab="Julian Day",
ylab="")
text(0.4, -0.6, "H", cex=1.5,font=2)
par(mfrow=c(4,2))
#DO
plot(nspm.2mo.dur.la, select=1, shade=T, all.terms=T, scale=0,
xlab="Dissolved Oxygen (mg l ^-1)",
ylab="Effect of Dissolved Oxygen")
text(3, -2, "A", cex=1.5,font=2)
plot(nspm.2mo.dur.tx, select=1, shade=T, all.terms=T, scale=0,
xlab="Dissolved Oxygen (mg l^-1",
ylab="")
text(3, -2, "B", cex=1.5,font=2)
#Depth
plot(nspm.2mo.dur.la, select=2, shade=T, all.terms=T, scale=0,
xlab="Depth (m)",
ylab="Effect of Depth")
text(3, -2, "C", cex=1.5,font=2)
plot(nspm.2mo.dur.tx, select=2, shade=T, all.terms=T, scale=0,
xlab="Depth (m)",
ylab="")
text(3, -2, "D", cex=1.5,font=2)
#Price
plot(nspm.2mo.dur.la, select=3, shade=T, all.terms=T, scale=0,
xlab="Price per pound (USD)",
ylab="Effect of Price")
text(0.4, -0.6, "E", cex=1.5,font=2)
plot(nspm.2mo.dur.tx, select=3, shade=T, all.terms=T, scale=0,
xlab="Price per pound (USD)",
ylab="")
text(0.4, -0.6, "F", cex=1.5,font=2)
#Day of Year
plot(nspm.2mo.dur.la, select=4, shade=T, all.terms=T, scale=0,
xlab="Julian Day",
ylab="Effect of Julian Day")
text(0.4, -0.6, "G", cex=1.5,font=2)
plot(nspm.2mo.dur.tx, select=4, shade=T, all.terms=T, scale=0,
xlab="Julian Day",
ylab="")
text(0.4, -0.6, "H", cex=1.5,font=2)
nspm.2mo.dur.tx<-gam(log(towhours+1) ~ factor(yr) + la_fuel_price  + hrs
+ s(do) + s(depth) + s(ppnd) + s(jd) + s(cent_lon,cent_lat),
data=gam.2mo.dur.tx)
par(mfrow=c(4,2))
#DO
plot(nspm.2mo.dur.la, select=1, shade=T, all.terms=T, scale=0,
xlab="Dissolved Oxygen (mg l ^-1)",
ylab="Effect of Dissolved Oxygen")
text(3, -2, "A", cex=1.5,font=2)
plot(nspm.2mo.dur.tx, select=1, shade=T, all.terms=T, scale=0,
xlab="Dissolved Oxygen (mg l^-1",
ylab="")
text(3, -2, "B", cex=1.5,font=2)
#Depth
plot(nspm.2mo.dur.la, select=2, shade=T, all.terms=T, scale=0,
xlab="Depth (m)",
ylab="Effect of Depth")
text(3, -2, "C", cex=1.5,font=2)
plot(nspm.2mo.dur.tx, select=2, shade=T, all.terms=T, scale=0,
xlab="Depth (m)",
ylab="")
text(3, -2, "D", cex=1.5,font=2)
#Price
plot(nspm.2mo.dur.la, select=3, shade=T, all.terms=T, scale=0,
xlab="Price per pound (USD)",
ylab="Effect of Price")
text(0.4, -0.6, "E", cex=1.5,font=2)
plot(nspm.2mo.dur.tx, select=3, shade=T, all.terms=T, scale=0,
xlab="Price per pound (USD)",
ylab="")
text(0.4, -0.6, "F", cex=1.5,font=2)
#Day of Year
plot(nspm.2mo.dur.la, select=4, shade=T, all.terms=T, scale=0,
xlab="Julian Day",
ylab="Effect of Julian Day")
text(0.4, -0.6, "G", cex=1.5,font=2)
plot(nspm.2mo.dur.tx, select=4, shade=T, all.terms=T, scale=0,
xlab="Julian Day",
ylab="")
text(0.4, -0.6, "H", cex=1.5,font=2)
par(mfrow=c(2,1))
#Get slope coefficients for  LA model
pred<-predict(m.2mo.dur.la, type='terms', se.fit=T)
pred.slope.do<-pred[[1]][,8]/gam.2mo.dur.la$do #number is the column or specific term you want to produce plots for
pred.slope.se.do<-1.96*pred[[2]][,8]/gam.2mo.dur.la$do
pred.slope.up.do<-(pred[[1]][,8]+pred.slope.se.do)/gam.2mo.dur.la$do
pred.slope.low.do<-(pred[[1]][,8]-pred.slope.se.do)/gam.2mo.dur.la$do
sign.slope.pos.do<-(1:length(pred.slope.do))[pred.slope.low.do>0]
sign.slope.neg.do<-(1:length(pred.slope.do))[pred.slope.up.do<0]
max.do<-max(abs(pred.slope.do))
# plot model output surface predictions
vis.gam(m.2mo.dur.la, view=c("cent_lon", "cent_lat"),
plot.type="contour", type="response", contour="black",
color="gray", n.grid=50, too.far=0.2, zlim=c(0.5,4.2),
main="", ylab="Latitude", xlab="Longitude")
#plot symbols that = significant slopes
symbols(gam.2mo.dur.la$cent_lon[sign.slope.pos.do],gam.2mo.dur.la$cent_lat[sign.slope.pos.do],
circle=pred.slope.do[sign.slope.pos.do],
inches=0.15*max(range(pred.slope.do[sign.slope.pos.do]))/max.do,
add=T,fg='white', bg='white')
symbols(gam.2mo.dur.la$cent_lon[sign.slope.neg.do],gam.2mo.dur.la$cent_lat[sign.slope.neg.do],
circle=abs(pred.slope.do[sign.slope.neg.do]),
inches=0.15*max(range(pred.slope.do[sign.slope.pos.do], finite=T))/max.do,
add=T,fg='black', bg='black')
# add coastline
map("worldHires", fill=T, col="grey",add=T)
#Get slope coefficients for TX model
pred<-predict(m.2mo.dur.tx, type='terms', se.fit=T)
pred.slope.do<-pred[[1]][,8]/gam.2mo.dur.tx$do #number is the column or specific term you want to produce plots for
pred.slope.se.do<-1.96*pred[[2]][,8]/gam.2mo.dur.tx$do
pred.slope.up.do<-(pred[[1]][,8]+pred.slope.se.do)/gam.2mo.dur.tx$do
pred.slope.low.do<-(pred[[1]][,8]-pred.slope.se.do)/gam.2mo.dur.tx$do
sign.slope.pos.do<-(1:length(pred.slope.do))[pred.slope.low.do>0]
sign.slope.neg.do<-(1:length(pred.slope.do))[pred.slope.up.do<0]
max.do<-max(abs(pred.slope.do))
# plot model output surface predications
vis.gam(m.2mo.dur.tx, view=c("cent_lon", "cent_lat"),
plot.type="contour", type="response", contour="black",
color="gray", n.grid=50, too.far=0.4, zlim=c(0.5,4.2),
main="", ylab="Latitude", xlab="Longitude")
# plot symbols that = significant slope effects
symbols(gam.2mo.dur.tx$cent_lon[sign.slope.pos.do],gam.2mo.dur.tx$cent_lat[sign.slope.pos.do],
circle=pred.slope.do[sign.slope.pos.do],inches=0.15*max(range(pred.slope.do[sign.slope.pos.do]))/max.do,add=T,fg='white',bg='white')
symbols(gam.2mo.dur.tx$cent_lon[sign.slope.neg.do],gam.2mo.dur.tx$cent_lat[sign.slope.neg.do],
circle=abs(pred.slope.do[sign.slope.neg.do]),inches=0.15*max(range(pred.slope.do[sign.slope.pos.do], finite=T))/max.do,add=T,fg='blue',bg='blue')
# add coastline
map("worldHires", fill=T, col="grey",add=T)
m.2mo.dur.tx<-gam(log(towhours+1) ~ factor(yr) + la_fuel_price  + hrs
+ s(depth) + s(ppnd) + s(jd) + s(cent_lon,cent_lat) +
s(cent_lon,cent_lat, by=do),
data=gam.2mo.dur.tx)
par(mfrow=c(2,1))
#Get slope coefficients for  LA model
pred<-predict(m.2mo.dur.la, type='terms', se.fit=T)
pred.slope.do<-pred[[1]][,8]/gam.2mo.dur.la$do #number is the column or specific term you want to produce plots for
pred.slope.se.do<-1.96*pred[[2]][,8]/gam.2mo.dur.la$do
pred.slope.up.do<-(pred[[1]][,8]+pred.slope.se.do)/gam.2mo.dur.la$do
pred.slope.low.do<-(pred[[1]][,8]-pred.slope.se.do)/gam.2mo.dur.la$do
sign.slope.pos.do<-(1:length(pred.slope.do))[pred.slope.low.do>0]
sign.slope.neg.do<-(1:length(pred.slope.do))[pred.slope.up.do<0]
max.do<-max(abs(pred.slope.do))
# plot model output surface predictions
vis.gam(m.2mo.dur.la, view=c("cent_lon", "cent_lat"),
plot.type="contour", type="response", contour="black",
color="gray", n.grid=50, too.far=0.2, zlim=c(0.5,4.2),
main="", ylab="Latitude", xlab="Longitude")
#plot symbols that = significant slopes
symbols(gam.2mo.dur.la$cent_lon[sign.slope.pos.do],gam.2mo.dur.la$cent_lat[sign.slope.pos.do],
circle=pred.slope.do[sign.slope.pos.do],
inches=0.15*max(range(pred.slope.do[sign.slope.pos.do]))/max.do,
add=T,fg='white', bg='white')
symbols(gam.2mo.dur.la$cent_lon[sign.slope.neg.do],gam.2mo.dur.la$cent_lat[sign.slope.neg.do],
circle=abs(pred.slope.do[sign.slope.neg.do]),
inches=0.15*max(range(pred.slope.do[sign.slope.pos.do], finite=T))/max.do,
add=T,fg='black', bg='black')
# add coastline
map("worldHires", fill=T, col="grey",add=T)
#Get slope coefficients for TX model
pred<-predict(m.2mo.dur.tx, type='terms', se.fit=T)
pred.slope.do<-pred[[1]][,8]/gam.2mo.dur.tx$do #number is the column or specific term you want to produce plots for
pred.slope.se.do<-1.96*pred[[2]][,8]/gam.2mo.dur.tx$do
pred.slope.up.do<-(pred[[1]][,8]+pred.slope.se.do)/gam.2mo.dur.tx$do
pred.slope.low.do<-(pred[[1]][,8]-pred.slope.se.do)/gam.2mo.dur.tx$do
sign.slope.pos.do<-(1:length(pred.slope.do))[pred.slope.low.do>0]
sign.slope.neg.do<-(1:length(pred.slope.do))[pred.slope.up.do<0]
max.do<-max(abs(pred.slope.do))
# plot model output surface predications
vis.gam(m.2mo.dur.tx, view=c("cent_lon", "cent_lat"),
plot.type="contour", type="response", contour="black",
color="gray", n.grid=50, too.far=0.4, zlim=c(0.5,4.2),
main="", ylab="Latitude", xlab="Longitude")
# plot symbols that = significant slope effects
symbols(gam.2mo.dur.tx$cent_lon[sign.slope.pos.do],gam.2mo.dur.tx$cent_lat[sign.slope.pos.do],
circle=pred.slope.do[sign.slope.pos.do],inches=0.15*max(range(pred.slope.do[sign.slope.pos.do]))/max.do,add=T,fg='white',bg='white')
symbols(gam.2mo.dur.tx$cent_lon[sign.slope.neg.do],gam.2mo.dur.tx$cent_lat[sign.slope.neg.do],
circle=abs(pred.slope.do[sign.slope.neg.do]),inches=0.15*max(range(pred.slope.do[sign.slope.pos.do], finite=T))/max.do,add=T,fg='blue',bg='blue')
# add coastline
map("worldHires", fill=T, col="grey",add=T)
source('~/GitHub/NOAA_Shrimp_ELB_Analysis/Analysis/NOAA_Shrimp_ELB_GAM_analysis.R', echo=TRUE)
source("C:\\Users\\Kevin.Purcell\\Documents\\GitHub\\NOAA_Shrimp_ELB_Analysis\\Analysis\\ResultsFigures\\Figure1.R")
source("C:\\Users\\Kevin.Purcell\\Documents\\GitHub\\NOAA_Shrimp_ELB_Analysis\\Analysis\\ResultsFigures\\Figure1.R")
windows(width=8, height=12)
par(mfrow=c(4,2))
#DO
plot(nspm.2mo.dur.la, select=1, shade=T, all.terms=T, scale=0,
xlab="Dissolved Oxygen (mg l ^-1)",
ylab="Effect of Dissolved Oxygen")
text(3, -2, "A", cex=1.5,font=2)
plot(nspm.2mo.dur.tx, select=1, shade=T, all.terms=T, scale=0,
xlab="Dissolved Oxygen (mg l^-1",
ylab="")
text(3, -2, "B", cex=1.5,font=2)
#Depth
plot(nspm.2mo.dur.la, select=2, shade=T, all.terms=T, scale=0,
xlab="Depth (m)",
ylab="Effect of Depth")
text(3, -2, "C", cex=1.5,font=2)
plot(nspm.2mo.dur.tx, select=2, shade=T, all.terms=T, scale=0,
xlab="Depth (m)",
ylab="")
text(3, -2, "D", cex=1.5,font=2)
#Price
plot(nspm.2mo.dur.la, select=3, shade=T, all.terms=T, scale=0,
xlab="Price per pound (USD)",
ylab="Effect of Price")
text(0.4, -0.6, "E", cex=1.5,font=2)
plot(nspm.2mo.dur.tx, select=3, shade=T, all.terms=T, scale=0,
xlab="Price per pound (USD)",
ylab="")
text(0.4, -0.6, "F", cex=1.5,font=2)
#Day of Year
plot(nspm.2mo.dur.la, select=4, shade=T, all.terms=T, scale=0,
xlab="Julian Day",
ylab="Effect of Julian Day")
text(0.4, -0.6, "G", cex=1.5,font=2)
plot(nspm.2mo.dur.tx, select=4, shade=T, all.terms=T, scale=0,
xlab="Julian Day",
ylab="")
text(0.4, -0.6, "H", cex=1.5,font=2)
windows(width=8, height=12)
par(mfrow=c(2,1))
#Get slope coefficients for  LA model
pred<-predict(m.2mo.dur.la, type='terms', se.fit=T)
pred.slope.do<-pred[[1]][,8]/gam.2mo.dur.la$do #number is the column or specific term you want to produce plots for
pred.slope.se.do<-1.96*pred[[2]][,8]/gam.2mo.dur.la$do
pred.slope.up.do<-(pred[[1]][,8]+pred.slope.se.do)/gam.2mo.dur.la$do
pred.slope.low.do<-(pred[[1]][,8]-pred.slope.se.do)/gam.2mo.dur.la$do
sign.slope.pos.do<-(1:length(pred.slope.do))[pred.slope.low.do>0]
sign.slope.neg.do<-(1:length(pred.slope.do))[pred.slope.up.do<0]
max.do<-max(abs(pred.slope.do))
# plot model output surface predictions
vis.gam(m.2mo.dur.la, view=c("cent_lon", "cent_lat"),
plot.type="contour", type="response", contour="black",
color="gray", n.grid=50, too.far=0.2, zlim=c(0.5,4.2),
main="", ylab="Latitude", xlab="Longitude")
#plot symbols that = significant slopes
symbols(gam.2mo.dur.la$cent_lon[sign.slope.pos.do],gam.2mo.dur.la$cent_lat[sign.slope.pos.do],
circle=pred.slope.do[sign.slope.pos.do],
inches=0.15*max(range(pred.slope.do[sign.slope.pos.do]))/max.do,
add=T,fg='white', bg='white')
symbols(gam.2mo.dur.la$cent_lon[sign.slope.neg.do],gam.2mo.dur.la$cent_lat[sign.slope.neg.do],
circle=abs(pred.slope.do[sign.slope.neg.do]),
inches=0.15*max(range(pred.slope.do[sign.slope.pos.do], finite=T))/max.do,
add=T,fg='black', bg='black')
# add coastline
map("worldHires", fill=T, col="grey",add=T)
#Get slope coefficients for TX model
pred<-predict(m.2mo.dur.tx, type='terms', se.fit=T)
pred.slope.do<-pred[[1]][,8]/gam.2mo.dur.tx$do #number is the column or specific term you want to produce plots for
pred.slope.se.do<-1.96*pred[[2]][,8]/gam.2mo.dur.tx$do
pred.slope.up.do<-(pred[[1]][,8]+pred.slope.se.do)/gam.2mo.dur.tx$do
pred.slope.low.do<-(pred[[1]][,8]-pred.slope.se.do)/gam.2mo.dur.tx$do
sign.slope.pos.do<-(1:length(pred.slope.do))[pred.slope.low.do>0]
sign.slope.neg.do<-(1:length(pred.slope.do))[pred.slope.up.do<0]
max.do<-max(abs(pred.slope.do))
# plot model output surface predications
vis.gam(m.2mo.dur.tx, view=c("cent_lon", "cent_lat"),
plot.type="contour", type="response", contour="black",
color="gray", n.grid=50, too.far=0.4, zlim=c(0.5,4.2),
main="", ylab="Latitude", xlab="Longitude")
# plot symbols that = significant slope effects
symbols(gam.2mo.dur.tx$cent_lon[sign.slope.pos.do],gam.2mo.dur.tx$cent_lat[sign.slope.pos.do],
circle=pred.slope.do[sign.slope.pos.do],inches=0.15*max(range(pred.slope.do[sign.slope.pos.do]))/max.do,add=T,fg='white',bg='white')
symbols(gam.2mo.dur.tx$cent_lon[sign.slope.neg.do],gam.2mo.dur.tx$cent_lat[sign.slope.neg.do],
circle=abs(pred.slope.do[sign.slope.neg.do]),inches=0.15*max(range(pred.slope.do[sign.slope.pos.do], finite=T))/max.do,add=T,fg='blue',bg='blue')
# add coastline
map("worldHires", fill=T, col="grey",add=T)
windows(width=8, height=12)
par(mfrow=c(2,2))
#Plot model predictions surfaces for LA model
vis.gam(m2008.la, view=c("cent_lon", "cent_lat"), zlim=c(-1,5),
plot.type="contour", type="response", contour="black",
color="topo", n.grid=50, too.far=0.4,
main="High Hypoxia", ylab="Latitude", xlab="Longitude")
map("worldHires", fill=T, col="grey",add=T)
#Plot model predicted surface for Tx model
vis.gam(m2009.la, view=c("cent_lon", "cent_lat"),zlim=c(-1,5),
plot.type="contour", type="response", contour="black",
color="topo", n.grid=50, too.far=0.4,
main="Low Hypoxia", ylab="Latitude", xlab="Longitude")
#add coastline
map("worldHires", fill=T, col="grey",add=T)
vis.gam(m2008.tx, view=c("cent_lon", "cent_lat"),zlim=c(-1,5),
plot.type="contour", type="response", contour="black",
color="topo", n.grid=50, too.far=0.4,
main="", ylab="Latitude", xlab="Longitude")
#add coastline
map("worldHires", fill=T, col="grey",add=T)
#Plot model predictions surfaces for LA model
vis.gam(m2009.tx, view=c("cent_lon", "cent_lat"), zlim=c(-1,5),
plot.type="contour", type="response", contour="black",
color="topo", n.grid=50, too.far=0.4,
main="", ylab="Latitude", xlab="Longitude")
#add coastline
map("worldHires", fill=T, col="grey",add=T)
la.2008<-subset(gam.2mo.dur.la, gam.2mo.dur.la$yr==2008)
tx.2008<-subset(gam.2mo.dur.tx, gam.2mo.dur.tx$yr==2008)
la.2009<-subset(gam.2mo.dur.la, gam.2mo.dur.la$yr==2009)
tx.2009<-subset(gam.2mo.dur.tx, gam.2mo.dur.tx$yr==2009)
m2008.la<-gam(log(towhours+1) ~ la_fuel_price + hrs +
+ s(depth) + s(ppnd) + s(jd) + s(cent_lon,cent_lat) +
s(cent_lon,cent_lat, by=do),
data=la.2008)
m2008.tx<-gam(log(towhours+1) ~ la_fuel_price + hrs +
+ s(depth) + s(ppnd) + s(jd) + s(cent_lon,cent_lat) +
s(cent_lon,cent_lat, by=do),
data=tx.2008)
m2009.la<-gam(log(towhours+1) ~ la_fuel_price + hrs +
+ s(depth) + s(ppnd) + s(jd) + s(cent_lon,cent_lat) +
s(cent_lon,cent_lat, by=do),
data=la.2009)
m2009.tx<-gam(log(towhours+1) ~ la_fuel_price + hrs +
+ s(depth) + s(ppnd) + s(jd) + s(cent_lon,cent_lat) +
s(cent_lon,cent_lat, by=do),
data=tx.2009)
windows(width=8, height=12)
par(mfrow=c(2,2))
#Plot model predictions surfaces for LA model
vis.gam(m2008.la, view=c("cent_lon", "cent_lat"), zlim=c(-1,5),
plot.type="contour", type="response", contour="black",
color="topo", n.grid=50, too.far=0.4,
main="High Hypoxia", ylab="Latitude", xlab="Longitude")
map("worldHires", fill=T, col="grey",add=T)
#Plot model predicted surface for Tx model
vis.gam(m2009.la, view=c("cent_lon", "cent_lat"),zlim=c(-1,5),
plot.type="contour", type="response", contour="black",
color="topo", n.grid=50, too.far=0.4,
main="Low Hypoxia", ylab="Latitude", xlab="Longitude")
#add coastline
map("worldHires", fill=T, col="grey",add=T)
vis.gam(m2008.tx, view=c("cent_lon", "cent_lat"),zlim=c(-1,5),
plot.type="contour", type="response", contour="black",
color="topo", n.grid=50, too.far=0.4,
main="", ylab="Latitude", xlab="Longitude")
#add coastline
map("worldHires", fill=T, col="grey",add=T)
#Plot model predictions surfaces for LA model
vis.gam(m2009.tx, view=c("cent_lon", "cent_lat"), zlim=c(-1,5),
plot.type="contour", type="response", contour="black",
color="topo", n.grid=50, too.far=0.4,
main="", ylab="Latitude", xlab="Longitude")
#add coastline
map("worldHires", fill=T, col="grey",add=T)
windows(width=8, height=12)
par(mfrow=c(2,1))
#DO
plot(nspm.2mo.avg.dur.la, select=1, shade=T, all.terms=T, scale=0,
xlab="Dissolved Oxygen (mg l ^-1)",
ylab="Effect of Dissolved Oxygen")
abline(h=0)
text(3, -2, "A", cex=1.5,font=2)
plot(nspm.2mo.avg.dur.tx, select=1, shade=T, all.terms=T, scale=0,
xlab="Dissolved Oxygen (mg l^-1",
ylab="")
abline(h=0)
text(3, -2, "B", cex=1.5,font=2)
windows(width=8, height=12)
par(mfrow=c(2,1))
#DO
plot(nspm.2mo.tow.count.la, select=1, shade=T, all.terms=T, scale=0,
xlab="Dissolved Oxygen (mg l ^-1)",
ylab="Effect of Dissolved Oxygen")
abline(h=0)
text(3, -2, "A", cex=1.5,font=2)
plot(nspm.2mo.tow.count.tx, select=1, shade=T, all.terms=T, scale=0,
xlab="Dissolved Oxygen (mg l^-1",
ylab="")
abline(h=0)
text(3, -2, "B", cex=1.5,font=2)
windows(width=8, height=12)
par(mfrow=c(2,1))
#Get slope coefficients for  LA model
pred<-predict(m.2mo.dur.la, type='terms', se.fit=T)
pred.slope.do<-pred[[1]][,8]/gam.2mo.dur.la$do #number is the column or specific term you want to produce plots for
pred.slope.se.do<-1.96*pred[[2]][,8]/gam.2mo.dur.la$do
pred.slope.up.do<-(pred[[1]][,8]+pred.slope.se.do)/gam.2mo.dur.la$do
pred.slope.low.do<-(pred[[1]][,8]-pred.slope.se.do)/gam.2mo.dur.la$do
sign.slope.pos.do<-(1:length(pred.slope.do))[pred.slope.low.do>0]
sign.slope.neg.do<-(1:length(pred.slope.do))[pred.slope.up.do<0]
max.do<-max(abs(pred.slope.do))
# plot model output surface predictions
vis.gam(m.2mo.dur.la, view=c("cent_lon", "cent_lat"),
plot.type="contour", type="response", contour="black",
color="topo", n.grid=50, too.far=0.2, zlim=c(0.5,4.2),
main="", ylab="Latitude", xlab="Longitude")
#plot symbols that = significant slopes
symbols(gam.2mo.dur.la$cent_lon[sign.slope.pos.do],gam.2mo.dur.la$cent_lat[sign.slope.pos.do],
circle=pred.slope.do[sign.slope.pos.do],
inches=0.15*max(range(pred.slope.do[sign.slope.pos.do]))/max.do,
add=T,fg='white', bg='white')
symbols(gam.2mo.dur.la$cent_lon[sign.slope.neg.do],gam.2mo.dur.la$cent_lat[sign.slope.neg.do],
circle=abs(pred.slope.do[sign.slope.neg.do]),
inches=0.15*max(range(pred.slope.do[sign.slope.pos.do], finite=T))/max.do,
add=T,fg='black', bg='black')
# add coastline
map("worldHires", fill=T, col="grey",add=T)
#Get slope coefficients for TX model
pred<-predict(m.2mo.dur.tx, type='terms', se.fit=T)
pred.slope.do<-pred[[1]][,8]/gam.2mo.dur.tx$do #number is the column or specific term you want to produce plots for
pred.slope.se.do<-1.96*pred[[2]][,8]/gam.2mo.dur.tx$do
pred.slope.up.do<-(pred[[1]][,8]+pred.slope.se.do)/gam.2mo.dur.tx$do
pred.slope.low.do<-(pred[[1]][,8]-pred.slope.se.do)/gam.2mo.dur.tx$do
sign.slope.pos.do<-(1:length(pred.slope.do))[pred.slope.low.do>0]
sign.slope.neg.do<-(1:length(pred.slope.do))[pred.slope.up.do<0]
max.do<-max(abs(pred.slope.do))
# plot model output surface predications
vis.gam(m.2mo.dur.tx, view=c("cent_lon", "cent_lat"),
plot.type="contour", type="response", contour="black",
color="topo", n.grid=50, too.far=0.4, zlim=c(0.5,4.2),
main="", ylab="Latitude", xlab="Longitude")
# plot symbols that = significant slope effects
symbols(gam.2mo.dur.tx$cent_lon[sign.slope.pos.do],gam.2mo.dur.tx$cent_lat[sign.slope.pos.do],
circle=pred.slope.do[sign.slope.pos.do],inches=0.15*max(range(pred.slope.do[sign.slope.pos.do]))/max.do,add=T,fg='white',bg='white')
symbols(gam.2mo.dur.tx$cent_lon[sign.slope.neg.do],gam.2mo.dur.tx$cent_lat[sign.slope.neg.do],
circle=abs(pred.slope.do[sign.slope.neg.do]),inches=0.15*max(range(pred.slope.do[sign.slope.pos.do], finite=T))/max.do,add=T,fg='blue',bg='blue')
# add coastline
map("worldHires", fill=T, col="grey",add=T)
windows(width=8, height=12)
par(mfrow=c(2,1))
#Get slope coefficients for  LA model
pred<-predict(m.2mo.dur.la, type='terms', se.fit=T)
pred.slope.do<-pred[[1]][,8]/gam.2mo.dur.la$do #number is the column or specific term you want to produce plots for
pred.slope.se.do<-1.96*pred[[2]][,8]/gam.2mo.dur.la$do
pred.slope.up.do<-(pred[[1]][,8]+pred.slope.se.do)/gam.2mo.dur.la$do
pred.slope.low.do<-(pred[[1]][,8]-pred.slope.se.do)/gam.2mo.dur.la$do
sign.slope.pos.do<-(1:length(pred.slope.do))[pred.slope.low.do>0]
sign.slope.neg.do<-(1:length(pred.slope.do))[pred.slope.up.do<0]
max.do<-max(abs(pred.slope.do))
# plot model output surface predictions
vis.gam(m.2mo.dur.la, view=c("cent_lon", "cent_lat"),
plot.type="contour", type="response", contour="black",
color="topo", n.grid=50, too.far=0.2, zlim=c(0.5,4.5),
main="", ylab="Latitude", xlab="Longitude")
#plot symbols that = significant slopes
symbols(gam.2mo.dur.la$cent_lon[sign.slope.pos.do],gam.2mo.dur.la$cent_lat[sign.slope.pos.do],
circle=pred.slope.do[sign.slope.pos.do],
inches=0.15*max(range(pred.slope.do[sign.slope.pos.do]))/max.do,
add=T,fg='white', bg='white')
symbols(gam.2mo.dur.la$cent_lon[sign.slope.neg.do],gam.2mo.dur.la$cent_lat[sign.slope.neg.do],
circle=abs(pred.slope.do[sign.slope.neg.do]),
inches=0.15*max(range(pred.slope.do[sign.slope.pos.do], finite=T))/max.do,
add=T,fg='black', bg='black')
# add coastline
map("worldHires", fill=T, col="grey",add=T)
#Get slope coefficients for TX model
pred<-predict(m.2mo.dur.tx, type='terms', se.fit=T)
pred.slope.do<-pred[[1]][,8]/gam.2mo.dur.tx$do #number is the column or specific term you want to produce plots for
pred.slope.se.do<-1.96*pred[[2]][,8]/gam.2mo.dur.tx$do
pred.slope.up.do<-(pred[[1]][,8]+pred.slope.se.do)/gam.2mo.dur.tx$do
pred.slope.low.do<-(pred[[1]][,8]-pred.slope.se.do)/gam.2mo.dur.tx$do
sign.slope.pos.do<-(1:length(pred.slope.do))[pred.slope.low.do>0]
sign.slope.neg.do<-(1:length(pred.slope.do))[pred.slope.up.do<0]
max.do<-max(abs(pred.slope.do))
# plot model output surface predications
vis.gam(m.2mo.dur.tx, view=c("cent_lon", "cent_lat"),
plot.type="contour", type="response", contour="black",
color="topo", n.grid=50, too.far=0.4, zlim=c(0.5,4.5),
main="", ylab="Latitude", xlab="Longitude")
# plot symbols that = significant slope effects
symbols(gam.2mo.dur.tx$cent_lon[sign.slope.pos.do],gam.2mo.dur.tx$cent_lat[sign.slope.pos.do],
circle=pred.slope.do[sign.slope.pos.do],inches=0.15*max(range(pred.slope.do[sign.slope.pos.do]))/max.do,add=T,fg='white',bg='white')
symbols(gam.2mo.dur.tx$cent_lon[sign.slope.neg.do],gam.2mo.dur.tx$cent_lat[sign.slope.neg.do],
circle=abs(pred.slope.do[sign.slope.neg.do]),inches=0.15*max(range(pred.slope.do[sign.slope.pos.do], finite=T))/max.do,add=T,fg='blue',bg='blue')
# add coastline
map("worldHires", fill=T, col="grey",add=T)
